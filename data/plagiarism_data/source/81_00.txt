Figure 1. A core-based system example with the proposed test architecture
 Therefore it is crucial to determine the optimal  length L OPT  of the pseudorandom test sequence, in order to  minimize the total testing cost.  Our previously proposed  methodology enables us to find the most cost-effective  combination of the two test sets not only in terms of test time  but also in terms of tester/on-chip memory requirements.  The  efficiency of such approach has been demonstrated so far for  individual cores.  In this paper we propose an approach to  extend our methodology also for complex systems containing  more than one core.  We take into account the constraints  (memory size) imposed by the system and minimize the  testing time for the whole system with multiple cores, while  keeping the high fault coverage.    In this paper we assume the following test architecture:  Every core has its own dedicated BIST logic that is capable to  produce a set of independent pseudorandom test patterns, i.e.  the pseudorandom test sets for all the cores can be carried out  simultaneously.  The deterministic tests, on the other hand,  can only be carried out for one core at a time, which means  only one test access bus at the system level is needed.  An  example of a multi-core system, with such a test architecture  is given in Figure 1.   SoC        C3540    C1908    C880   C1355 Embedded Tester      C2670 Test access mechanism BIST BIST BIST BIST BIST Test  Controller Tester Memory Figure 1. A core-based system example with the  proposed test architecture  This example system consists of 5 cores (different ISCAS  benchmarks).  Using our hybrid BIST optimization  methodology for single core [3] we can find the optimal  combination between pseudorandom and deterministic test  patterns for every individual core (Figure 2). Considering the  assumed test architecture, only one deterministic test set can  be applied at any given time, while any number of  pseudorandom test sessions can take place in parallel.  To  enforce the assumption that only one deterministic test can be  applied at a time, a simple ad-hoc scheduling can be used.   The result of this scheduling defines the starting moments for  every deterministic test session, the memory requirements,  and the total test length t for the whole system.  This situation  is illustrated on Figure 2.  As it can be seen from Figure 2, the solution where every  individual core has the best possible combination between  pseudorandom and deterministic patterns usually does not  lead to the best system-level test solution.  In the example we  have illustrated three potential problems:    The total test length of the system is determined by the  single longest individual test set, while other tests may be  substantially shorter;   The resulting deterministic test sets do not take into  account the memory requirements, imposed by the size of  Proceedings of the 12th Asian Test Symposium (ATS’03)  1081-7735/03 $17. 00 © 2003 IEEE the on-chip memory or the external test equipment;   The proposed test schedule may introduce idle periods,  due to the test conflicts between the deterministic tests of  different cores;  There are several possibilities for improvement. 

