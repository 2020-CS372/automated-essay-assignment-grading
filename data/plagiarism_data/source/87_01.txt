Fig. 7. Flowchart of the mobile robot navigation procedure.
 Different from the virtual target method proposed in [10,11], an additional virtual robot-to-target angle u v (analo- goustotheinterleukinesecretedbyT-cells)isaddedtothegoal angle u g whenever the trap condition (ju i u g j>908)is satisﬁed: u g ðkþ1Þ¼ u g ðkÞþu v ðkÞ (8) with where Du g =u g (k)u g (k1) and u c (k)=u c (k1)+l.  Parameters k1, k,and k+1representthepreviousstate, thecurrentstateandthefuturestate,respectively. Symbol ‘‘	’’ indicates that the location of the virtual target can be randomly switched to either the right (i.e.‘‘+’’)ortheleft (i.e.‘‘’’) side of the mobile robot so that the robot has a higher probability of escaping from the local minima in either direction. l is an adjustable decay angle.  The bigger thevalue is, the faster the location of virtual target converges to that of the true one and the easier it is for the robot to get u v ðkÞ¼ u v ðk1Þ	Du g ifju i ðkÞu g ðkÞj 90  andu v ðk1Þ¼ 0 u v ðkÞ¼ u v ðk1Þþsignðu v ðk1ÞÞDu g ifju i ðkÞu g ðkÞj 90  andu v ðk1Þ6¼0 u v ðkÞ¼ maxf0;u v ðk1Þsignðu v ðk1ÞÞu c ðk1Þg ifju i ðkÞu g ðkÞj<90  andu v ðk1Þ 0 u v ðkÞ¼ minf0;u v ðk1Þsignðu v ðk1ÞÞu c ðk1Þg ifju i ðkÞu g ðkÞj<90  andu v ðk1Þ<0 8 > > < > > : G.-C. Luh, W.-W. Liu/Applied Soft Computing 8 (2008) 30–45 38trapped in the local minima again.  In this study, l is determined after multiple simulation runs and set to 0. 2. The incremental virtual angle u v ðkÞ in the proposed scheme is state dependent and self-adjustable according to the robot’s current state and the action it took previously.  This provides powerful and effective trap-escaping capability compared to virtual targetmethod, which keepsu v a constant value. u c is a converging angle and its initial value is 0.  Fig. 7 demonstrates the ﬂowchart of navigation procedure for mobile robot employing the proposed reactive immune network; corresponding variables utilized are tabulated in Table 1.  Forcarryingoutthenecessarysimulationandvalidatingthe efﬁcacyoftheproposedmethodology,acomputerprogramwas developed using C++ language with graphical user interface.  The simulation environment contains a robot and obstacle constructed by numerous square blocks 10cm in length.  The environmental condition adopted in simulation is a 300cm300cm grid.  The size of the simulated robot is a circle with 10cm diameter.  During each excursion, the robot tries to reach target and avoid collision with obstacle.  Fig. 8 illustrates the simulation window of the mobile robot navigating in a double U-shaped obstacles and its resulting trajectory. 

