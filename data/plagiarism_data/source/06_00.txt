Figure 1. High Level Google Architecture4.
 Couple this flexibility to publish anything with the enormous influence of search engines to route traffic and companies which deliberately manipulating search engines for profit become a serious problem.  This problem that has not been addressed in traditional closed information retrieval systems.  Also, it is interesting to note that metadata efforts have largely failed with web search engines, because any text on the page which is not directly represented to the user is abused to manipulate search engines.  There are even numerous companies which specialize in manipulating search engines for profit.   4 System Anatomy First, we will provide a high level discussion of the architecture.  Then, there is some in-depth descriptions of important data structures.  Finally, the major applications: crawling, indexing, and searching will be examined in depth.          4.1 Google Architecture Overview In this section, we will give a high level overview of how the whole system works as pictured in Figure 1. Further sections will discuss the applications and data structures not mentioned in this section.  Most of Google is implemented in C or C++ for efficiency and can run in either Solaris or Linux.   In Google, the web crawling (downloading of web pages) is done by several distributed crawlers.  There is a URLserver that sends lists of URLs to be fetched to the crawlers.  The web pages that are fetched are then sent to the storeserver.  The storeserver then compresses and stores the web pages into a repository.  Every web page has an associated ID number called a docID which is assigned whenever a new URL is parsed out of a web page. 

