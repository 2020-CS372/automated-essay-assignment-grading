Figure 1: In tegration of em b edded soft w are components
 Section 3 presen ts the b eha vior mo del and the Control Plan for in tegrated behavior specication.  Section 4 describ es system in tegration under this arc hitecture.  Section 5 presen ts evaluations based on two example machine control systems built with the proposed architecture.  Section 6 describ es related w ork in this domain.  The paper concludes with Section 7.  2. COMPONENT STRUCTURE Components are preimplemented soft ware mo dules and treated as building blocks in integration.  The in tegrated embedded soft ware can be viewed as a collection of comm unicating reusable comp onents.  Figure 1 shows the embedded soft ware constructed by in tegrating components. Figure 1: In tegration of embedded soft ware components The component structure denes the required information for components to coop erate with others in a system. Our soft ware component is mo deled as a set of external in terfaces with registration and mapping mechanisms, communication ports, control logic driver and service protocols, as shown in  Figure 2. External in terfaces. External in terfaces dene the functionality of the component that can be invoked outside the component.  In our model, external in terfaces are represented as a set of acceptable events with designated parameters.  A component with other forms of external interfaces, such as function calls, can be integrated in to the system by mapping each of them to a unique event. Figure 2: Reusable component structure. vironments, and enables components from dieren tv endors (possibly implemented with dierent considerations) to be in tegrated in to the system without the source code. External in terfaces are generally dened as global (external) events, which are system-wide information.  A customizable event mapping mechanism is devised in a comp onent to achieve the translation between global events and the comp onen tâ€™s in ternal representations. 

