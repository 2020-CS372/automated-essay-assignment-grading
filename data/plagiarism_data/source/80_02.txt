Figure 4. Architecture of scalar multiplying module
00  © 2007device. A very small amount of clock cycles is required to  read and write the temporary data to and fro Block Ram.   The architecture of the coprocessor is shown in Figure 3,  in which Mod Mult is instantiated modular multiplication  module in Verilog description, X3, Z3 and Qout are 233- bit wide register, Add Logic Control and Double Logic  Control are operation process finite state machine module. Figure 3. Architecture of point operation module  On the field of arithmetic operation over GF(2 233 ) ,  the coprocessor can achieve two different point adding  operation, point doubling operation and two point sub- tracting operation and so on. To improve computing per- formance the data bus inside coprocessor is 233-bit wide.   All the computing operation is controlled by finite state  machine.      5. Scalar multiplication    Many scalar multiplication algorithms for certain el- liptic curve have been proposed, such as binary method,  non-adjacent form (NAF) method, slide window NAF  method, fixed comb method, Montgomery method, etc.   Among these algorithms, the NAF method, without pre- computing, is more suitable for hardware implementation  for its concision and efficiency.  The following NAF algo- rithm is adopted in our design of coprocessor.  The archi- tecture of scalar multiplying module in FPGA device is  depicted as Figure 4.  1.set h l h l–1 ...h 1 h 0  is binary representa- tion of 3k.   2.set k l k l–1 ...k 1 k 0  is binary representa- tion of k.   3.set S=Q.  4.For i from l–1 Downto 1 Do      4. 1 set S = 2S.      4. 2 if (h i =1 && k i =0)  S=S+Q;      4. Figure 4. Architecture of scalar multiplying module  For example, two different elliptic curve points addi- tion requires 9 field multiplications in mixed coordinate  system, one is affine coordinate system and the other is L- D projective coordinate system. A point doubling require  4 field multiplications and each multiplication requires  ⎡233/2 ⎤ =117 clock cycles in GF(2 233 ).  Suppose k is 233  bits and the hamming weight is approximately 70, so a  general scalar multiplication requires about 183000 clock  cycles. 

