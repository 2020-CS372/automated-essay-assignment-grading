Fig. 5. Block diagram of the FPGA-based temperature control system.
 Finally, one adder computes the sum of I(k−1) andI  (k), resulting inI(k); one adder calculates the sum of D1(k) and D2(k), resulting in D(k), and two adders calculate the sum of P(k), I(k), and D(k), resulting in u(k).  The throughput (speed) of this PID implementation is (m+1) clock cycles, i.e.,m clock cycles to generate the result, and one more clock cycle to update theu c (k−1),y(k−1),I(k−1), and D(k−1) terms.  For the multiplier-based controller the throughput is one clock cycle.  The latency is also (m+1) clock cycles, whereas for the multiplier-based method, it is one clock cycle.  However, in terms of complexity, the DA-based scheme requires four LUTs, four ACCs, four delay blocks, and four adders, whereas the multiplier-based method requires ﬁve multipliers, four delay blocks, and seven adders, which is less area efﬁcient than the DA-based scheme.  C. Application toaTemperature Control System In this section, we use the modules that were described in Sections II-B1 and II-B2 to design a PID feedback controller for a temperature control system.  The FPGA-based temperature control system that is shown in Fig. 4 comprise the following components: 1) a tube with a fan, a light bulb, and a thermistor; 2) an I/O panel that includes a Digilent DIO2 board with an onboard CPLD, 1 push-button keys with an LCD display, and a PS2 keyboard, which is connected to the DIO2 board; 3) an ADC chip that is mounted on a separate circuit board; and 4) a Digilent Digilab 2E (D2E) FPGA development board consisting a Xilinx Spartan-2E FPGA [13].  Fig. 5 illustrates the block diagram of the FPGA-based temperature control system with the actual setup shown in  Fig. 6. The thermistor in series with a resistor in  Fig. 4 is used for temperature measurement inside the tube. V oltagev t acrossR t is used to calculate the temperature that is sampled by the ADC to be used in the control law. Two PWM generators are implemented to control the dc motor and the lamp.  The motor and lamp are turned either on or off, depending on the PID controller output u. If u is a negative number, the PWM generator for the fan will generate a PWM waveform with appropriate duty cycle, while the PWM generator for the lamp will generate an off pulse.  If u is positive, the opposite will be true.  In our implementation,u is a 34-bit ﬁxed-point two’s complement number. 

