Fig 3. Architecture of point operation modulehowever, we can find that three multiplications areindependently computed, i.e., the multiplications X1Z2
 With the method mentioned above, the distinct points adding and the same point doubling formula can be derived.  From algorithm 1, if we use one multiplier, six multiplications are required.  By observing the algorithm 1, iversion signal Fig 3. Architecture of point operation module however, we can find that three multiplications are independently computed, i.e., the multiplications X1Z2 (T1),X2Z1 A. Algorithm 1: Point doubling & addition with uniform addressing if K I - 2 =1 then Swap(X l,X 2 ) , Swap(Zj , Z2) end if for i = 1-2 down to 0 do Z3 = (X lZ2 + X 2Zl)2 X 2 =X Z3 + (X lZ2)(X2Zl ) , Z2=Z3, Xl =X l +bT l , Zl =X 2 lZ 2 l ICAG 2009if (I != 0 and kt!= k l-I) or (I = 0 and k, = 1) then Swap(X I,X2), Swaptzj, Z2) end if end for 5.output S. (T 2 ) , and XIZ I can be computed at the first step and the multiplications T I 12, XZ3, and bTl can be computed at the second step respectively.  From this observation, we can derive a new parallelized version corresponding to the algorithm 1, and a modified version is described in algorithm2.  B. Algorithm 2: Parallelized version of point doubling & addition with uniform addressing Point Adding Module LFSF­ Random Generator if kt-2 = 1 then Swap(X I,X2), Swap(ZI' Z2) end if for i = 1- 2 down to 0 do 2 1.  T I = (XIZ2), T 2 = (X 2ZI ) , Z3 = (T I + T 2 ) , T 3 = (X IZI)2,Z2 = Z3 2. X 2 = T IT 2 + X Z 3,xI =bT I +.. 0 1 ,ZI = T 3 if (I != 0 and k, != k 1-1) or (I = 0 and k, = 1) then Swap(X I,X2), Swap(ZI, Z2) end if end for A very small amount of clock cycles is required to read and write the temporary data to and fro Block MM. The architecture of the coprocessor is shown in Figure 3, in which Mod Mult is instantiated modular multiplication module in Verilog description, X 3, Z3 and Qout are 233- bit wide register, Add Logic Control and Double Logic Control are operation process finite state machine module.  On the field of arithmetic operation over GF(i 33 ) , the coprocessor can achieve two different point adding operation, point doubling operation and two point subtracting operation and so on.  To improve computing performance the data bus inside coprocessor is 233 -bit wide.  All the computing operation is controlled by finite state machine.  V. SCALAR MULTIPLICATION Many scalar multiplication algorithms for certain elliptic curve have been proposed, such as binary method, non-adjacent form (NAF) method, slide window NAF method, fixed comb method, Montgomery method, etc.  Among these algorithms, the NAF method, without pre­ computing, is more suitable for hardware implementation for its concision and efficiency.  The following NAF algorithm is adopted in our design of coprocessor. 

