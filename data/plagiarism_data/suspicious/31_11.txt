Fig. 1. COMMAS task hierarchy and agents.
 1) Requirements capture/knowledge capture.  2) Task decomposition: transformation of high-level require- ments into a hierarchy of tasks and subtasks (including those performed by legacy systems).  3) Ontology design: design of the data model and the vo- cabulary used by the agents to exchange information and data.  4) Agent modeling: identiﬁcation and design of the indepen- dent and autonomous agents which will combine to per- form the tasks and subtasks identiﬁed previously.  5) Agent interactions modeling: deﬁnition of the interactions between different agents.  6) Agent behavior functions: design of the software func- tions to allow the agent interactions, including the con- trol mechanisms which allow autonomy, reactiveness, and pro-activeness.  Stages 1 and 2 were undertaken in collaboration with UHF monitoring experts and utility representatives.  Based on these discussions and knowledge capture, the task hierarchy shown in Fig. 1 was developed.  Stage 3 required the design of an ontology for COMMAS. This is one of the key aspects of a MAS as it underpins the inter-agent communication.  It also becomes the basis for exten- sibility.  The ontology is the system vocabulary, and it is within the ontology that concepts and their relationships are deﬁned [11].  As an example, the basic ontology for the transformer mon- itoring system is shown in Fig. 2. It should be viewed as a class hierarchy of facts.  For example, a TxUHFFeatureVector fact will inherit the attributes of the TransformerData fact.  This also ensures that a valid TxUHFFeatureVector must be associ- ated with a valid transformer. 

