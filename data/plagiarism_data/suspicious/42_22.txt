Figure 3: Implementation of SALMon architecture
 The first one is a  database used by the Monitors to store the measures  which are processed by the Analyzer in order to detect  SLA violations.  This service is mandatory.  The second  external service is for authentication and authorization  of SALMon users; these users could be normal users or  administrators.  Normal users will be able to set SOA  systems and SLA while administrators will set the  configuration of the SALMon system.  This service is  optional.   The first implementation of SALMon is part of a  joint work between our Software Engineering for  Information Systems Group (GESSI) at the Universitat  Polit√®cnica de Catalunya (UPC), Spain, and the  Institute for Systems Engineering and Automation  (SEA) at the Johannes Kepler University (JKU) in Linz  (Austria).  Some details of this collaboration may be  found at [11].  In this context, SALMon architecture  will be only focused on Web services (see Figure 3).  Measure Instruments will be prepared to measure  Response Time and Availability (Accuracy is omitted  in this first implementation due to its complexity as  commented above).  This combination will make this  implementation easy to install on a running Web  service-based SOA system.    For the database we have selected a stream database  for two reasons, first because the type of information to  be stored fits with the one expected in this kind of  database to perform queries efficiently, and second  because the kind of queries that the Analyzer needs are  easy to express using the extended SQL provided by  this technology. Figure 3: Implementation of SALMon architecture  226Finally the Decision Maker service will be  developed as a set of two plug-ins for an existing tool  called Decision King [12], the first plug-in is to make  an interconnection layer between the Analyzer and  Decision King and the second one is for the adaptation  of the monitored SOA system.    4. Conclusion    Being able to build self-adaptive SOA systems is a  major undertaking that requires tools to evolve.  In the  context of SOA systems the dynamic changes are  needed in order to keep fulfilling the QoS requirements  stated in SLAs.  SALMon provides a method based in  the current SLA standards and the monitored  information to make self-adapting SOA systems.    The SALMon architecture can be used for all type  of services due to its high technologic independence. 

