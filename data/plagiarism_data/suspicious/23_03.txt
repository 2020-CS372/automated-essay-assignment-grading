Figure 1. Overview of Component Retrieval and Adaptation Activitiescomponents to solve the problem. During adaptation, it maybe necessary to locate or construct additional componentsby issuing a subproblem back to the component retrievalsystem.
 While these provide formal mechanisms for compo- nent retrieval and adaptation, providing automated support for the entire reuse process requires heuristics for select- ing adaptation strategies based on the available components and architectures.  The goal of this paper is to explore the use of speciﬁcation matching results to discover and select component adaptation strategies.  In the next section we present and overview of our de- sign system.  This is followed by an introduction to the speciﬁcation formalisms used in the system.  The next two sections provide details of speciﬁcation matching to deter- mine component reusability and the method of architecture speciﬁcation.  We then discuss how these two are integrated by using speciﬁcation matching results to guide component adaptation and give an example of adaptation.  Finally, we present related work and conclude by summarizing and dis- cussing future research directions.  2. System Overview Figure 1 depicts the ﬂow of information within our frame- work.  In the diagram, boxes represent data structures, ovals represent computations and arrows represent data ﬂow into computations and references between data structures.  In the framework, formal speciﬁcations are used to model the problem requirements and the function of the library com- ponents.  The speciﬁcations are based on abstract data types deﬁned in an algebraic domain theory [4, 15].  Component retrieval is made efﬁcient by layering a clas- siﬁcation scheme above the speciﬁcations.  The classiﬁca- tion scheme consists of a collection of formal deﬁnitions representing possible component features in the domain.  The formalization of the scheme permits automated classi- ﬁcation of the speciﬁcations. 

