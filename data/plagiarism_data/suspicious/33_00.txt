Figure 5. Architecture of SLAMon
   TABLE I.  AN EXAMPLE OF QOS MODEL  Name ComparisionOp Val Unit  A: Availability >= 0. 7 null  T: ResponseTime <= 10 ms  F: FaultRecoverT <= 500 ms  C: Cost = 55 yuan  R: Reputation = 6 null  Some features of WSOL such as service class, constraints  and the management statement could support the model  appropriately and we choose related subset of WSOL for the  formal description of the SLA model.  For example, instance  model showed in table1 can be described as the following  XML document shown in figure 4.    Figure 4. Formal description for the QoS model in table1  IV. SLA MONITOR ARCHITECTURE  Service-Oriented Architecture (SOA) [11] is an emerging  software architecture; systems based on this architecture  consist in multiple services working together.  Since web  services may change their QoS in runtime due to  environmental issues or changes made by the service provider,  SOA systems need to be adaptable in runtime.   In this section, we propose a SOA-based tool for SLA  monitoring called SLAMon.  The monitor that is in charge of  providing QoS information that is needed to detect SLA  violations comprises a monitor, analyzer and arbiter.  These  three types of components are technology-independent and act  as services running inside of SOSS. SLAMon is SOA-based  which means service providers could substitute their services  by others that possess the interfaces defined for SLAMon.   The architecture of SLAMon is shown in figure 5. It is  composed of three types of services: Monitor Analyzer and  Arbiter.   The Monitor service comprises Measurers; these  components will bring the measures to the Monitor that has the  responsibility to maintain this information updated.  The update  process is an iterative call to each Measurer in different  intervals of time, saving the results in a database.  Measurers  are components instantiated in each monitored service to get  all the basic performance data of the selected quality attributes.   The interface and implementation of the Measurers is  technology-independent because they are designed to support  different kinds of services (web services, HTTP services,  agent-based services et.al).  They can be seen as plug-ins to  support specific service technology.   The Analyzer manages Monitor and checks for SLA  violations in SOSS. Performance data of the selected quality  attributes collected by Monitor will be delivered to the  Analyzer to compare with those metrics and indicators stored  in a database. 

