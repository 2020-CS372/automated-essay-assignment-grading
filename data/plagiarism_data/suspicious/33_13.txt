Fig. 5. Agent design methodology stages and their output, used during the de-sign of the PEDA system [17].systems, distributed control systems, and modeling and simu-lation, allowing the interchange of information about speciﬁcplant. Depending on what is being modeled, other CIM pack-ages may serve as starting points for ontologies for those appli-cations.
 Recommendation: If interoperation with other multi-agent systems is desirable, then the use of a common upper ontology will ease the integration of MAS from different developers.  De- velopers can then extend the upper ontology to include con- cepts and predicates required for their applications.  An upper ontology based on CIM is proposed in this paper and will be made available via the IEEE MAS Working Group web site.  IV . DESIGNING MULTI-AGENT SYSTEMS Since the mid 1990s, a number of different methodologies have emerged for the speciﬁcation and design of multi-agent systems, developing or extending traditional software engi- neering approaches and knowledge engineering approaches.  MAS-CommonKADS [24], for example, extends the Com- monKADS knowledge engineering methodology [25].  DESIRE [26], MaSE [27], and Gaia [28], on the other hand, owe more to object-oriented software development methodologies.  MAS design methodologies tend to share some common fea- tures: a conceptualization phase where the problem to be solved is speciﬁed; an analysis phase; and a design phase that uses the results of the analysis phase to produce agent designs of varying detail.  A. Example Methodology Fig. 5 illustrates the different stages of the design method- ology that McArthur et al. used to specify and then design the PEDA system.  Details of the methodology can be found in full in [29].  Each stage of the methodology produces material that is used in the subsequent stages of the design process. MCARTHUR et al.: MULTI-AGENT SYSTEMS FOR POWER ENGINEERING APPLICATIONS—PART II 1757 The methodology begins with a structured knowledge engi- neering stage, specifying the system requirements and capturing the knowledge needed to fulﬁll those requirements.  During the task decomposition stage, the requirements speciﬁcation and knowledge captured in the previous stage are transformed into a hierarchy of tasks and subtasks.  These tasks may include the functions performed by legacy systems.  In the case of PEDA, legacy intelligent systems were used to provide data analysis functions. 

