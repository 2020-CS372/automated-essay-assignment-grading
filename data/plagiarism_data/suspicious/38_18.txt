Fig. 2. Proposed SOC test architecture.
  II N sed for our purpose fr benchmark circuits.  The problems related to testing  sequential circuits are much more complicated than those  for the combinational circuits.  The basic reason is the  presence of storage elements in the realization of  sequential circuits.  The testing time is also generally  higher in the case of sequential circuits.  The test  generation was focused at the gate level based on single  stuck-fault model.  The first step in our SOC test generation  procedures is to obtain specified sets of test vectors using  high-level descriptions of circuit cores.  We endeavored to  improve upon the process by using automatic test  generation for high fault coverage.  Figure 2 gives our  proposed SOC test architecture, while a flow chart of the  test procedure is furnished in Fig. 3.      All the SOCs used in the paper were designed to operate  in Altera Max Plus II development e the SOC cores, the test access mechanism (TAM) was also  designed to work with Max Plus II and described in  Verilog HDL. The process of fault injection for the  different SOC cores was carried out by the designed fault  simulator [11].  The fault simulator was written in C  programming language, and injects faults in three distinct  steps in a core.  It first injects faults at the input lines, then  at the output lines, which were followed by fault injection  at the internal wires.  The nature of faults is single stuck- faults.  Thus each line can have only two types of stuck- faults: stuck-at-1 and stuck-at-0.  A line with a stuck-at-1  fault will always have a logical value 1 irrespective of the  correct logical output of the gate driving it.  We used here  simulation based fault injection scheme to evaluate the  dependability of the system based on the percentage of  fault coverage. 

