Figure 9. Adaptation Tactics for Weak Postin the situations where Binary Search does not or (b)maps all legal problem inputs to legal Binary Searchinputs in such a way that a valid solution is generated.
 The behavior of the architecture can be modiﬁed by replacing one of its subcomponents.  6.1. Augmentation In augmentation we modify a component’s behavior by placing it into a simple architecture.  For example, con- sider the problem speciﬁcation for theFind component in Figure 7. A speciﬁcation-based component retrieval mecha- nism would return theBinary Search component from Figure 8 as a possible candidate for reuse due to their iden- tical output conditions.  However, Binary Search does not satisfyFind because its behavior is not deﬁned for all of the legal inputs toFind.  Instead, the Weak Post match holds between the two speciﬁcations: Weak Post: (I B S ^ O B S ) ) O F This information can be used to guide component adapta- tion.  Speciﬁcally, if we can adapt Binary Search to cover the rest of the legal inputs, then we will have a com- plete solution to the problem.  The component can be properly adapted by placing it in an architecture with another component that provides the missing functionality required to solve the problem.  We have identiﬁed two adaptation tactics that will work, shown in Figure 9: add a component that (a) solves the problem(a) (b) BSearch BSearch ? ? Find Find A B A B Figure 9. Adaptation Tactics for Weak Post in the situations where Binary Search does not or (b) maps all legal problem inputs to legal Binary Search inputs in such a way that a valid solution is generated.  We are currently investigatingalternate architectures and heuris- tics for selecting adaptation tactics.  Tradeoffs that must be considered while selecting an adaptation tactic may include performance requirements, limits on parallelism and con- straints on the target language.  For illustrative purposes, we will use the second method in this example.  By plugging Find and Binary Search into the proper architecture theory, we can generate a speciﬁcation for the missing component.  This process is shown in Fig- ure 10. The renamings associated with a speciﬁcation mor- phism are associated with the morphism arrows.  TheFind Problem speciﬁcation is plugged in for the system spec- iﬁcation in the Arch Sequential architecture theory. 

