Figure 2. An example of a core-based system, with independent BIST resources.
 We will  concentrate on two large classes of test architectures.   In one case we assume that every core is equipped B019 Non-destructive testing, picture acquisition methods  154 with its own pseudorandom pattern generator and only  deterministic patterns have to be transported to the  cores.  In the second case we assume test pattern  broadcasting, where both pseudorandom and  deterministic test patterns have to be transported to the  cores under test.  For both architectures we will  describe test-per-clock as well as test-per-scan  application schemes.   2. PARALLEL HYBRID BIST ARCHITECTURE  AND POSSIBILITIES FOR TIME  MINIMIZATION  It is start with a test architecture where every core  has its own dedicated BIST logic that is capable of  producing a set of independent pseudorandom test  patterns, i.e. the pseudorandom test sets for all the  cores can be carried out simultaneously [1, 2].  At the  system level, however, only one test access bus is  assumed, thus the deterministic tests can only be  carried out for one core at a time.  Such architecture  assumes that all patterns from the same test set  (pseudorandom or deterministic) for the same CUT  have the same test application time, thus simplifying  test cost calculations.  An example of a multicore  system, with such a test architecture is given in Figure  2. In order to explain the test time minimization  problem for multicore systems, let us use an example  design, consisting of  5 cores (Figure 2).  Using the hybrid BIST optimization methodology,  described in [2], Chapter 5, is possible to find the  optimal combination between pseudorandom and  deterministic test patterns for every individual core.   Considering the assumed test architecture, only one  deterministic test set can be applied at any given time,  while any number of pseudorandom test sessions can  take place in parallel.  To enforce the assumption that  only one deterministic test can be applied at a time, a  simple adhoc scheduling method can be used.    For portable systems, one of the most important  test constraints is the total amount of on-chip test  memory.  In the previous chapters it is introduced  several methods, based on different test architectures,  for test time minimization.  Those algorithms were  able to find a shortest possible test time under given  test memory constraint for test-per-clock and test-per- scan schemes.  These algorithms, however, do not  require explicit specification, whether the  deterministic test set has to be stored in the ATE or  on-chip memory (ROM). 

