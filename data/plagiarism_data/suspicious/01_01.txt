Fig. 1. Architecture development for the multi-agent systemprocess.
 C. Distributed Data Access and Processing Another beneﬁt offered by MAS is the distribution of agents across a network [10].  Software agents may have different levels of intelligence, ranging from data agents and functional agents to decision agents.  Because each agent is designed to perform a speciﬁc role, with associated knowledge and skills, distributed and heterogeneous infor- mation may be efﬁciently assimilated locally and utilized in a coordinated fashion in distributed knowledge networks, resulting in reduced information processing time and net- work bandwidth in comparison to that of more traditional centralized schemes.  D. Distributed Decision Support MAS also offers a powerful task decomposition approach to problem solving through interaction among agents.  This is facilitated by the ability of different agents to coordinate behavior through cooperation by agents establishing mutu- ally agreeable objectives, negotiation by agents negotiating until agreement is reached, or mediation by agents resolving conﬂicts that cannot be resolved by appealing to a third, neutral agent [11].  IV. MULTI-AGENT SYSTEM METHODOLOGY Several MAS paradigms and methodologies have been proposed in the literature such MASSIVE [11], DESIRE [12], Gaia [13] and MaSE [14], based on different notions of agents and multi-agent organizations.  In this paper, the design framework as described in [15] was followed in designing a multi-agent system for bushing condition moni- toring.  Figure 1 shows the architecture used for developing the multi-agent system.  The three main phases, as depicted in the ﬁgure are; requirements capture and task decomposition; agent modelling and agent interactions modelling.  A. Requirements Capture and Task Decomposition This is the ﬁrst stage which identiﬁes the application domain, overall problem, objectives, MAS application en- vironment such as information that will be available to an agent, actions required of the agents, and operational and performance constraints.  In this stage, task decomposition is performed to determine what the system is supposed to do and not how it is supposed to do it to achieve overall MAS objectives.  In the agent community; decomposition is concerned with the partitioning of the problem domain into agents.  The main focus of this phase is gaining an understanding of what the system does in the abstract, which serves as a starting point for the architecture development 645Fig. 1. Architecture development for the multi-agent system process.  The activities undertaken in this phase pertain to understanding the application domain, identifying goals and boundaries of the system, and relating them to the agent design. 

