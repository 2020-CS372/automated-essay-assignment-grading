Figure 5. A fragmentation tree
 Note that the full precedence is only a partial ordering.  To avoid computing a fragmentation twice, we associate with each fragmentation F =[F 1 ,...,F r ] a marker F i that is the non-singleton fragment such that ∀j>i, F j is a singleton fragment.  For the root, the marker is its ﬁrst fragment.  Intuitively, the marker associated with a fragmentation denotes the starting point for fragments to be combined to obtain children of the fragmentation (as a combination with any fragment preceding it will produce duplicate fragmentations).  We then deﬁne an order-based cover for the lattice as follows. Figure 5. A fragmentation tree F p , there exists i,j with m≤i and F p i fully preceding F p j , such that: 1) ∀l < j,l = i, F c l =F p l ; 2) F c i =F p i F p j ; 3) ∀l ≥ j , F c l =F p l+1 . An order-based cover for (F,) is a graph with the same vertices as (F,).  Each edge (F p ,F c ) in the graph represents a dominance relationship F p F c , where the fragmentsF p i andF p j merged to obtainF c follow the marker F p m and are such that all the attributes in F p i precede all the attributes in F p j .  As an example, consider the order- based cover in Figure 5, where < A is the lexicographic order, built on the fragmentation lattice in Figure 4. The underlined fragments are the markers.  Given fragmentations F p =[N|O|S|Z] andF c =[N|OS|Z], edge (F p ,F c ) belongs to T since for i =2 and j =3 we have that F c 1 =F p 1 =N; F c 2 =F p 2 F p 3 =OS; and F c 3 =F p 3+1 =Z. The order-based cover so deﬁned corresponds to a fragmentation tree for the lattice, as stated by the following theorem.  Theorem 4.3: The order-based coverT of a lattice (F,) is a fragmentation tree for (F,) with root F  .  A straightforward solution to Problem 3. 1 consists in visiting the fragmentation tree T built over the set A f of attributes to be fragmented.  This solution, while ensuring a non-redundant evaluation of fragmentations, remains expo- nential in the number of attributes.  While this may not be an issue for small schemas, it may make the algorithm not applicable for complex schemas. 

