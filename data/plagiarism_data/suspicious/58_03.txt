Figure 5. Runtime system generation from composition
 The device- independent behaviors depend only on the application level control logic, and can be reused for      the same application with different devices.  The device-dependent behaviors are dedicated to a device or a configuration, and can be reused for different applications with the same device.  Figure 4. Hierarchical composition model  With such a composition model, both components for low- level control such as algorithms and drivers and for high- level systems can be constructed and reused.  4.2. Runtime System Construction # The integrated software obtained from the composition model cannot be executed directly on a platform since the composition model only deals with functionality.  To obtain executable software, components have to be grouped into tasks, which are basic schedulable units in current operating systems.  1 Each task needs to be assigned to a  processor with proper scheduling parameters (e.g.,  scheduling policy and priority) determined by an appropriate real-time analysis.  Also, communications among components should be mapped to the services supported by the platform configuration. After these pieces of information are obtained, the components can be  mapped to the platform by customizing their service protocols.  Figure 5 shows the mapping form functional integrated software to a runtime system with our architecture.  Figure 5. Runtime system generation from  composition Proceedings of the Fourth Annual ACIS International Conference on Computer and Information Science (ICIS’05)  0-7695-2296-3/05 $20. 00 © 2005 IEEE5. Evaluation  We evaluated our architecture by constructing two soft- ware prototypes for machine tool control with the same set of reusable components.  The software is running on two control boxes (with their own processors and memory) connected with a peer-to-peer Ethernet.  The software  components are implemented with the proposed structures and mechanisms.  The evaluation is carried by examining the reusability of components and reconfigurability of integrated software.  5.1. Mobile Motion Controller # We first developed motion control software for a 3-axis milling machine, called Mobile. 

