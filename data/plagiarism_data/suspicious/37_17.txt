Fig. 1. GALS system [9].four-phase version of the asynchronous GALS wrapper, whichhandles multiple ports and also facilitates testing, is presentedin [9].
 The risk of metastability in the synchronizer is analyzed in a technology-independent manner.  Index Terms—Asynchronous circuits, globally asynchronous, locally synchronous (GALS), synchronization, system-on-chip (SoC).  I. INTRODUCTION A S SILICON technology continues to make rapid progress, systems-on-chip (SoCs) incorporate an increasing number of modules of growing sizes, operating at faster clock frequen- cies.  These developments make it even more difﬁcult to distribute a single synchronous clock to the entire chip [1].  As an alternative, different methods for providing each module with its own clock are being developed.  Another motivation for independently clocking different modules, is to reduce power consumption by means of dynamic voltage and frequency scaling (DVFS) [2]–[4].  When the clock frequencies of the various modules are uncorrelated with each other, and when they can change over time independent of the clocks of other modules, the resulting SoC is termed a globally asynchronous, locally synchronous (GALS) system [5], [6].  Each GALS module (a “Locally Synchronous Island”) can be enclosed in an asynchronous wrapper (Fig. 1), which facilitates inter-mod- ular communications and generates the clock for the module [7]–[14].  Data synchronization and communication across clock do- mains in GALS architectures constitute a major challenge.  The Manuscript received June 11, 2005; revised February 17, 2006.  This work was supported in part by ACiD-WG. R. Dobkin and R. Ginosar are with the Electrical Engineering Department, Technion-Israel Institute of Technology, Haifa 32000, Israel (e-mail: ros- tikd@tx.technion.ac.il; ran@ee.technion.ac.il).  C. P. Sotiriou is with the Computer Architecture and VLSI Systems Division, ICS-FORTH, Vassilika V outon, Heraklion, Crete, GR 711 10, Greece (e-mail: sotiriou@ics.forth.gr).  Digital Object Identiﬁer 10. 1109/TVLSI.2006.884148 simple “two-ﬂop” synchronizer typically incurs signiﬁcant mul- ticycle latency and limits the throughput. 

